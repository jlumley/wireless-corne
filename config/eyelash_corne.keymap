#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define TAPPING_TERM 300

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&none  &kp Q       &kp W       &kp E        &kp R         &kp T                                    &mmv MOVE_UP                     &kp Y        &kp U            &kp I         &kp O       &kp P         &none
&none  &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHIFT F  &kp G                    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H        &mt RSHIFT J     &mt RCTRL K   &mt RALT L  &mt RGUI SQT  &none
&none  &kp Z       &kp X       &kp C        &kp V         &kp B      &kp K_MUTE                    &mmv MOVE_DOWN                   &kp N        &kp M            &kp COMMA     &kp DOT     &kp FSLH      &none
                               &lt 1 ESC    &lt 5 SPACE   &lt 6 TAB                                                                 &lt 2 ENTER  &lt 3 BACKSPACE  &lt 4 DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        media_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &none           &trans        &none         &none         &none                                  &trans          &rgb_ug RGB_TOG  &rgb_ug RGB_EFF   &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans  &trans
&trans  &bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &trans  &trans  &trans  &kp C_PREV       &kp C_VOL_DN      &kp C_VOL_UP     &kp C_NEXT       &trans  &trans
&trans  &trans          &trans        &trans        &trans        &rgb_ug RGB_EFF  &kp C_MUTE            &trans          &rgb_ug RGB_EFR  &rgb_ug RGB_SPI   &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans  &trans
                                      &trans        &trans        &trans                                                 &kp C_STOP       &kp C_PLAY_PAUSE  &kp C_MUTE
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        symbol_layer {
            bindings = <
&trans  &kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC                     &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS             &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE   &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                             &kp LPAR   &kp RPAR   &kp UNDER                                    &trans  &trans  &trans
            >;
        };

        number_layer {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT                     &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH   &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                           &kp DOT  &kp N0  &kp MINUS                                    &trans  &trans  &trans
            >;
        };

        function_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans     &trans         &trans      &trans     &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &kp LEFT   &kp DOWN       &kp UP      &kp RIGHT  &caps_word  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans     &trans         &trans      &trans     &trans      &trans
                        &trans  &trans  &trans                                    &kp ENTER  &kp BACKSPACE  &kp DELETE
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &kp K_REDO      &kp K_PASTE     &kp K_COPY    &kp K_CUT        &kp K_UNDO  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans          &trans          &trans        &trans           &trans      &trans
                        &trans  &trans  &trans                                    &mkp RCLK       &mkp LCLK       &mkp MCLK
            >;
        };
    };
};
